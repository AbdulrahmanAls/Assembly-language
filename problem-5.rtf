{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\ri380\partightenfactor0

\f0\fs19 \cf0 Status Flags\
	Write a program that shows all the status flags affected by the INC, DEC, ADD, and SUB instructions\
\
.686\
.model flat, stdcall\
.stack 4096\
ExitProcess proto, dwExitCode:dword\
\
.data\
a1 word 0ffffh\
b1 sword 07fffh\
c1 dword 0ffffffffh\
d1 sdword 07fffffffh\
.code\
main proc\
\
mov ax , a1\
add ax , 1; CY and AC flages \
sub ax , 1 \
mov bx , b1 \
add bx , 1 ; OV flages \
mov eax , c1 \
add eax , 1 ; ZR and CY falges \
mov eax , d1 \
add eax , 1  ; PL and OV flages \
\
	invoke ExitProcess, 0\
main endp\
end main\
\pard\pardeftab720\ri380\sl276\slmult1\sa200\rtlpar\qc\partightenfactor0

\f1\fs22 \cf0 \
\pard\pardeftab720\ri380\sl276\slmult1\sa200\rtlpar\partightenfactor0
\cf0 \
- 
\f0 Stack Operations\

\f1 	
\f0 Using only push and pop instructions exchange the value in EAX with EBX and the value in ECX with the value in EDX\
\
\pard\pardeftab720\ri380\partightenfactor0

\fs19 \cf0 .686\
.model flat, stdcall\
.stack 4096\
ExitProcess proto, dwExitCode:dword\
\
.data\
\
a1 dword 10\
b1 dword 20 \
c1 dword 30 \
d1 dword 40\
.code\
main proc\
\
mov eax , a1\
mov ebx , b1 \
mov ecx , c1 \
mov edx , d1 \
\
push eax \
push ebx \
push ecx \
push edx \
\
pop ecx \
pop edx \
pop eax \
pop ebx \
\
\
\
	invoke ExitProcess, 0\
main endp\
end main\
\pard\pardeftab720\ri380\sl276\slmult1\sa200\rtlpar\partightenfactor0

\fs22 \cf0 \
}